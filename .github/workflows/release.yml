name: Release Charts

on:
  push:
    branches:
      - main
  workflow_call: {}


jobs:
  release:
    # depending on default permission settings for your org (contents being read-only or read-write for workloads), you will have to add permissions
    # see: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.8.1

      - name: Add repositories
        run: |
          for dir in $(ls -d charts/*/); do
            helm dependency list $dir 2> /dev/null | tail +2 | head -n -1 | awk '{ print "helm repo add " $1 " " $3 }' | while read cmd; do $cmd; done
          done

      - name: Get next version
        id: get_next_version
        uses: thenativeweb/get-next-version@2.1.1

      - name: Updates Chart.yaml version
        if: ${{ steps.get_next_version.outputs.hasNextVersion == 'true' }}
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.version = "${{ steps.get_next_version.outputs.version }}"' 'charts/n8n/Chart.yaml'

      - name: Commit changes caused by version bump
        if: ${{ steps.get_next_version.outputs.hasNextVersion == 'true' }}
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "chore: bump chart version to ${{ steps.get_next_version.outputs.version }}"

      - name: Create new release
        if: ${{ steps.get_next_version.outputs.hasNextVersion == 'true' }}
        run: |
          NEXT_VERSION=${{ steps.get_next_version.outputs.version }}
          git tag $NEXT_VERSION
          git push origin $NEXT_VERSION

      - uses: redhat-cop/github-actions/set-helm-version@master
        if: ${{ steps.get_next_version.outputs.hasNextVersion == 'true' }}
        with:
          path: ./charts/n8n
          chart_version: ${{ steps.get_next_version.outputs.version }}
          
      - name: Delete existing tag
        uses: actions/github-script@v4
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            try {
              const { owner, repo } = context.repo
              const version = "${{ steps.get_next_version.outputs.version }}";
              const ref = "tags/n8n-${{ steps.get_next_version.outputs.version }}";

              console.log("Going to delete ref:", ref);
              await github.git.deleteRef({ owner, repo, ref }) 
            } catch(e) {
              console.log("ERROR:", e);
            }
          
      - name: Delete existing release
        uses: actions/github-script@v4
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            try {
              const { owner, repo } = context.repo
              const tag = "n8n-${{ steps.get_next_version.outputs.version }}";
              const { data: { id } } = await github.repos.getReleaseByTag({ owner, repo, tag })

              console.log("Going to delete release ID:", id);
              await github.repos.deleteRelease({ owner, repo, release_id: id }) 
            } catch(e) {
              console.log("ERROR:", e);
            }

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.4.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
